#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace finalProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="restMyOrder")]
	public partial class RestMyOrder : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCs_appetizer(Cs_appetizer instance);
    partial void UpdateCs_appetizer(Cs_appetizer instance);
    partial void DeleteCs_appetizer(Cs_appetizer instance);
    partial void InsertCs_dessert(Cs_dessert instance);
    partial void UpdateCs_dessert(Cs_dessert instance);
    partial void DeleteCs_dessert(Cs_dessert instance);
    partial void InsertCs_diningTable(Cs_diningTable instance);
    partial void UpdateCs_diningTable(Cs_diningTable instance);
    partial void DeleteCs_diningTable(Cs_diningTable instance);
    partial void InsertCs_mainCourse(Cs_mainCourse instance);
    partial void UpdateCs_mainCourse(Cs_mainCourse instance);
    partial void DeleteCs_mainCourse(Cs_mainCourse instance);
    partial void InsertCs_order(Cs_order instance);
    partial void UpdateCs_order(Cs_order instance);
    partial void DeleteCs_order(Cs_order instance);
    partial void InsertCs_sideDish(Cs_sideDish instance);
    partial void UpdateCs_sideDish(Cs_sideDish instance);
    partial void DeleteCs_sideDish(Cs_sideDish instance);
    #endregion
		
		public RestMyOrder(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestMyOrder(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestMyOrder(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestMyOrder(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cs_appetizer> Cs_appetizer
		{
			get
			{
				return this.GetTable<Cs_appetizer>();
			}
		}
		
		public System.Data.Linq.Table<Cs_dessert> Cs_dessert
		{
			get
			{
				return this.GetTable<Cs_dessert>();
			}
		}
		
		public System.Data.Linq.Table<Cs_diningTable> Cs_diningTable
		{
			get
			{
				return this.GetTable<Cs_diningTable>();
			}
		}
		
		public System.Data.Linq.Table<Cs_mainCourse> Cs_mainCourse
		{
			get
			{
				return this.GetTable<Cs_mainCourse>();
			}
		}
		
		public System.Data.Linq.Table<Cs_order> Cs_order
		{
			get
			{
				return this.GetTable<Cs_order>();
			}
		}
		
		public System.Data.Linq.Table<Cs_sideDish> Cs_sideDish
		{
			get
			{
				return this.GetTable<Cs_sideDish>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cs_appetizer")]
	public partial class Cs_appetizer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppetizerId;
		
		private string _DishName;
		
		private double _DishPrice;
		
		private EntitySet<Cs_order> _Cs_order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppetizerIdChanging(int value);
    partial void OnAppetizerIdChanged();
    partial void OnDishNameChanging(string value);
    partial void OnDishNameChanged();
    partial void OnDishPriceChanging(double value);
    partial void OnDishPriceChanged();
    #endregion
		
		public Cs_appetizer()
		{
			this._Cs_order = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_Cs_order), new Action<Cs_order>(this.detach_Cs_order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="appetizerId", Storage="_AppetizerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppetizerId
		{
			get
			{
				return this._AppetizerId;
			}
			set
			{
				if ((this._AppetizerId != value))
				{
					this.OnAppetizerIdChanging(value);
					this.SendPropertyChanging();
					this._AppetizerId = value;
					this.SendPropertyChanged("AppetizerId");
					this.OnAppetizerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishName", Storage="_DishName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DishName
		{
			get
			{
				return this._DishName;
			}
			set
			{
				if ((this._DishName != value))
				{
					this.OnDishNameChanging(value);
					this.SendPropertyChanging();
					this._DishName = value;
					this.SendPropertyChanged("DishName");
					this.OnDishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishPrice", Storage="_DishPrice", DbType="Float NOT NULL")]
		public double DishPrice
		{
			get
			{
				return this._DishPrice;
			}
			set
			{
				if ((this._DishPrice != value))
				{
					this.OnDishPriceChanging(value);
					this.SendPropertyChanging();
					this._DishPrice = value;
					this.SendPropertyChanged("DishPrice");
					this.OnDishPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_order_appetizer", Storage="_Cs_order", ThisKey="AppetizerId", OtherKey="AppetizerId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> Cs_order
		{
			get
			{
				return this._Cs_order;
			}
			set
			{
				this._Cs_order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_appetizer = this;
		}
		
		private void detach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_appetizer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cs_dessert")]
	public partial class Cs_dessert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesertId;
		
		private string _DishName;
		
		private double _DishPrice;
		
		private EntitySet<Cs_order> _Cs_order;
		
		private EntitySet<Cs_order> _Desert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesertIdChanging(int value);
    partial void OnDesertIdChanged();
    partial void OnDishNameChanging(string value);
    partial void OnDishNameChanged();
    partial void OnDishPriceChanging(double value);
    partial void OnDishPriceChanged();
    #endregion
		
		public Cs_dessert()
		{
			this._Cs_order = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_Cs_order), new Action<Cs_order>(this.detach_Cs_order));
			this._Desert = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_Desert), new Action<Cs_order>(this.detach_Desert));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desertId", Storage="_DesertId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesertId
		{
			get
			{
				return this._DesertId;
			}
			set
			{
				if ((this._DesertId != value))
				{
					this.OnDesertIdChanging(value);
					this.SendPropertyChanging();
					this._DesertId = value;
					this.SendPropertyChanged("DesertId");
					this.OnDesertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishName", Storage="_DishName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DishName
		{
			get
			{
				return this._DishName;
			}
			set
			{
				if ((this._DishName != value))
				{
					this.OnDishNameChanging(value);
					this.SendPropertyChanging();
					this._DishName = value;
					this.SendPropertyChanged("DishName");
					this.OnDishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishPrice", Storage="_DishPrice", DbType="Float NOT NULL")]
		public double DishPrice
		{
			get
			{
				return this._DishPrice;
			}
			set
			{
				if ((this._DishPrice != value))
				{
					this.OnDishPriceChanging(value);
					this.SendPropertyChanging();
					this._DishPrice = value;
					this.SendPropertyChanged("DishPrice");
					this.OnDishPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_dessertOne", Storage="_Cs_order", ThisKey="DesertId", OtherKey="DessertOneId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> Cs_order
		{
			get
			{
				return this._Cs_order;
			}
			set
			{
				this._Cs_order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_dessertTwo", Storage="_Desert", ThisKey="DesertId", OtherKey="DessertTwoId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> Desert
		{
			get
			{
				return this._Desert;
			}
			set
			{
				this._Desert.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_dessert = this;
		}
		
		private void detach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_dessert = null;
		}
		
		private void attach_Desert(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.DessertTwo = this;
		}
		
		private void detach_Desert(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.DessertTwo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cs_diningTable")]
	public partial class Cs_diningTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiningTableId;
		
		private EntitySet<Cs_order> _Cs_order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiningTableIdChanging(int value);
    partial void OnDiningTableIdChanged();
    #endregion
		
		public Cs_diningTable()
		{
			this._Cs_order = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_Cs_order), new Action<Cs_order>(this.detach_Cs_order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="diningTableId", Storage="_DiningTableId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiningTableId
		{
			get
			{
				return this._DiningTableId;
			}
			set
			{
				if ((this._DiningTableId != value))
				{
					this.OnDiningTableIdChanging(value);
					this.SendPropertyChanging();
					this._DiningTableId = value;
					this.SendPropertyChanged("DiningTableId");
					this.OnDiningTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_diningTable", Storage="_Cs_order", ThisKey="DiningTableId", OtherKey="DiningTableId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> Cs_order
		{
			get
			{
				return this._Cs_order;
			}
			set
			{
				this._Cs_order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_diningTable = this;
		}
		
		private void detach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_diningTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cs_mainCourse")]
	public partial class Cs_mainCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MainCourseId;
		
		private string _DishName;
		
		private double _DishPrice;
		
		private EntitySet<Cs_order> _Cs_order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMainCourseIdChanging(int value);
    partial void OnMainCourseIdChanged();
    partial void OnDishNameChanging(string value);
    partial void OnDishNameChanged();
    partial void OnDishPriceChanging(double value);
    partial void OnDishPriceChanged();
    #endregion
		
		public Cs_mainCourse()
		{
			this._Cs_order = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_Cs_order), new Action<Cs_order>(this.detach_Cs_order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mainCourseId", Storage="_MainCourseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MainCourseId
		{
			get
			{
				return this._MainCourseId;
			}
			set
			{
				if ((this._MainCourseId != value))
				{
					this.OnMainCourseIdChanging(value);
					this.SendPropertyChanging();
					this._MainCourseId = value;
					this.SendPropertyChanged("MainCourseId");
					this.OnMainCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishName", Storage="_DishName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DishName
		{
			get
			{
				return this._DishName;
			}
			set
			{
				if ((this._DishName != value))
				{
					this.OnDishNameChanging(value);
					this.SendPropertyChanging();
					this._DishName = value;
					this.SendPropertyChanged("DishName");
					this.OnDishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishPrice", Storage="_DishPrice", DbType="Float NOT NULL")]
		public double DishPrice
		{
			get
			{
				return this._DishPrice;
			}
			set
			{
				if ((this._DishPrice != value))
				{
					this.OnDishPriceChanging(value);
					this.SendPropertyChanging();
					this._DishPrice = value;
					this.SendPropertyChanged("DishPrice");
					this.OnDishPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_mainCourse", Storage="_Cs_order", ThisKey="MainCourseId", OtherKey="MainCourseId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> Cs_order
		{
			get
			{
				return this._Cs_order;
			}
			set
			{
				this._Cs_order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_mainCourse = this;
		}
		
		private void detach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_mainCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cs_order")]
	public partial class Cs_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _DiningTableId;
		
		private int _AppetizerId;
		
		private int _MainCourseId;
		
		private int _SideDishOneId;
		
		private int _SideDishTwoId;
		
		private int _DessertOneId;
		
		private int _DessertTwoId;
		
		private EntityRef<Cs_dessert> _Cs_dessert;
		
		private EntityRef<Cs_dessert> _DessertTwo;
		
		private EntityRef<Cs_diningTable> _Cs_diningTable;
		
		private EntityRef<Cs_mainCourse> _Cs_mainCourse;
		
		private EntityRef<Cs_sideDish> _Cs_sideDish;
		
		private EntityRef<Cs_sideDish> _SideDishTwo;
		
		private EntityRef<Cs_appetizer> _Cs_appetizer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnDiningTableIdChanging(int value);
    partial void OnDiningTableIdChanged();
    partial void OnAppetizerIdChanging(int value);
    partial void OnAppetizerIdChanged();
    partial void OnMainCourseIdChanging(int value);
    partial void OnMainCourseIdChanged();
    partial void OnSideDishOneIdChanging(int value);
    partial void OnSideDishOneIdChanged();
    partial void OnSideDishTwoIdChanging(int value);
    partial void OnSideDishTwoIdChanged();
    partial void OnDessertOneIdChanging(int value);
    partial void OnDessertOneIdChanged();
    partial void OnDessertTwoIdChanging(int value);
    partial void OnDessertTwoIdChanged();
    #endregion
		
		public Cs_order()
		{
			this._Cs_dessert = default(EntityRef<Cs_dessert>);
			this._DessertTwo = default(EntityRef<Cs_dessert>);
			this._Cs_diningTable = default(EntityRef<Cs_diningTable>);
			this._Cs_mainCourse = default(EntityRef<Cs_mainCourse>);
			this._Cs_sideDish = default(EntityRef<Cs_sideDish>);
			this._SideDishTwo = default(EntityRef<Cs_sideDish>);
			this._Cs_appetizer = default(EntityRef<Cs_appetizer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="orderId", Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="diningTableId", Storage="_DiningTableId", DbType="Int NOT NULL")]
		public int DiningTableId
		{
			get
			{
				return this._DiningTableId;
			}
			set
			{
				if ((this._DiningTableId != value))
				{
					this.OnDiningTableIdChanging(value);
					this.SendPropertyChanging();
					this._DiningTableId = value;
					this.SendPropertyChanged("DiningTableId");
					this.OnDiningTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="appetizerId", Storage="_AppetizerId", DbType="Int NOT NULL")]
		public int AppetizerId
		{
			get
			{
				return this._AppetizerId;
			}
			set
			{
				if ((this._AppetizerId != value))
				{
					this.OnAppetizerIdChanging(value);
					this.SendPropertyChanging();
					this._AppetizerId = value;
					this.SendPropertyChanged("AppetizerId");
					this.OnAppetizerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mainCourseId", Storage="_MainCourseId", DbType="Int NOT NULL")]
		public int MainCourseId
		{
			get
			{
				return this._MainCourseId;
			}
			set
			{
				if ((this._MainCourseId != value))
				{
					this.OnMainCourseIdChanging(value);
					this.SendPropertyChanging();
					this._MainCourseId = value;
					this.SendPropertyChanged("MainCourseId");
					this.OnMainCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sideDishOneId", Storage="_SideDishOneId", DbType="Int NOT NULL")]
		public int SideDishOneId
		{
			get
			{
				return this._SideDishOneId;
			}
			set
			{
				if ((this._SideDishOneId != value))
				{
					this.OnSideDishOneIdChanging(value);
					this.SendPropertyChanging();
					this._SideDishOneId = value;
					this.SendPropertyChanged("SideDishOneId");
					this.OnSideDishOneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sideDishTwoId", Storage="_SideDishTwoId", DbType="Int NOT NULL")]
		public int SideDishTwoId
		{
			get
			{
				return this._SideDishTwoId;
			}
			set
			{
				if ((this._SideDishTwoId != value))
				{
					this.OnSideDishTwoIdChanging(value);
					this.SendPropertyChanging();
					this._SideDishTwoId = value;
					this.SendPropertyChanged("SideDishTwoId");
					this.OnSideDishTwoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dessertOneId", Storage="_DessertOneId", DbType="Int NOT NULL")]
		public int DessertOneId
		{
			get
			{
				return this._DessertOneId;
			}
			set
			{
				if ((this._DessertOneId != value))
				{
					this.OnDessertOneIdChanging(value);
					this.SendPropertyChanging();
					this._DessertOneId = value;
					this.SendPropertyChanged("DessertOneId");
					this.OnDessertOneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dessertTwoId", Storage="_DessertTwoId", DbType="Int NOT NULL")]
		public int DessertTwoId
		{
			get
			{
				return this._DessertTwoId;
			}
			set
			{
				if ((this._DessertTwoId != value))
				{
					this.OnDessertTwoIdChanging(value);
					this.SendPropertyChanging();
					this._DessertTwoId = value;
					this.SendPropertyChanged("DessertTwoId");
					this.OnDessertTwoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_dessertOne", Storage="_Cs_dessert", ThisKey="DessertOneId", OtherKey="DesertId", IsForeignKey=true)]
		public Cs_dessert Cs_dessert
		{
			get
			{
				return this._Cs_dessert.Entity;
			}
			set
			{
				Cs_dessert previousValue = this._Cs_dessert.Entity;
				if (((previousValue != value) 
							|| (this._Cs_dessert.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cs_dessert.Entity = null;
						previousValue.Cs_order.Remove(this);
					}
					this._Cs_dessert.Entity = value;
					if ((value != null))
					{
						value.Cs_order.Add(this);
						this._DessertOneId = value.DesertId;
					}
					else
					{
						this._DessertOneId = default(int);
					}
					this.SendPropertyChanged("Cs_dessert");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_dessertTwo", Storage="_DessertTwo", ThisKey="DessertTwoId", OtherKey="DesertId", IsForeignKey=true)]
		public Cs_dessert DessertTwo
		{
			get
			{
				return this._DessertTwo.Entity;
			}
			set
			{
				Cs_dessert previousValue = this._DessertTwo.Entity;
				if (((previousValue != value) 
							|| (this._DessertTwo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DessertTwo.Entity = null;
						previousValue.Desert.Remove(this);
					}
					this._DessertTwo.Entity = value;
					if ((value != null))
					{
						value.Desert.Add(this);
						this._DessertTwoId = value.DesertId;
					}
					else
					{
						this._DessertTwoId = default(int);
					}
					this.SendPropertyChanged("DessertTwo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_diningTable", Storage="_Cs_diningTable", ThisKey="DiningTableId", OtherKey="DiningTableId", IsForeignKey=true)]
		public Cs_diningTable Cs_diningTable
		{
			get
			{
				return this._Cs_diningTable.Entity;
			}
			set
			{
				Cs_diningTable previousValue = this._Cs_diningTable.Entity;
				if (((previousValue != value) 
							|| (this._Cs_diningTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cs_diningTable.Entity = null;
						previousValue.Cs_order.Remove(this);
					}
					this._Cs_diningTable.Entity = value;
					if ((value != null))
					{
						value.Cs_order.Add(this);
						this._DiningTableId = value.DiningTableId;
					}
					else
					{
						this._DiningTableId = default(int);
					}
					this.SendPropertyChanged("Cs_diningTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_mainCourse", Storage="_Cs_mainCourse", ThisKey="MainCourseId", OtherKey="MainCourseId", IsForeignKey=true)]
		public Cs_mainCourse Cs_mainCourse
		{
			get
			{
				return this._Cs_mainCourse.Entity;
			}
			set
			{
				Cs_mainCourse previousValue = this._Cs_mainCourse.Entity;
				if (((previousValue != value) 
							|| (this._Cs_mainCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cs_mainCourse.Entity = null;
						previousValue.Cs_order.Remove(this);
					}
					this._Cs_mainCourse.Entity = value;
					if ((value != null))
					{
						value.Cs_order.Add(this);
						this._MainCourseId = value.MainCourseId;
					}
					else
					{
						this._MainCourseId = default(int);
					}
					this.SendPropertyChanged("Cs_mainCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_sideDishOne", Storage="_Cs_sideDish", ThisKey="SideDishOneId", OtherKey="SideDishId", IsForeignKey=true)]
		public Cs_sideDish Cs_sideDish
		{
			get
			{
				return this._Cs_sideDish.Entity;
			}
			set
			{
				Cs_sideDish previousValue = this._Cs_sideDish.Entity;
				if (((previousValue != value) 
							|| (this._Cs_sideDish.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cs_sideDish.Entity = null;
						previousValue.Cs_order.Remove(this);
					}
					this._Cs_sideDish.Entity = value;
					if ((value != null))
					{
						value.Cs_order.Add(this);
						this._SideDishOneId = value.SideDishId;
					}
					else
					{
						this._SideDishOneId = default(int);
					}
					this.SendPropertyChanged("Cs_sideDish");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_sideDishTwo", Storage="_SideDishTwo", ThisKey="SideDishTwoId", OtherKey="SideDishId", IsForeignKey=true)]
		public Cs_sideDish SideDishTwo
		{
			get
			{
				return this._SideDishTwo.Entity;
			}
			set
			{
				Cs_sideDish previousValue = this._SideDishTwo.Entity;
				if (((previousValue != value) 
							|| (this._SideDishTwo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SideDishTwo.Entity = null;
						previousValue.SideDish.Remove(this);
					}
					this._SideDishTwo.Entity = value;
					if ((value != null))
					{
						value.SideDish.Add(this);
						this._SideDishTwoId = value.SideDishId;
					}
					else
					{
						this._SideDishTwoId = default(int);
					}
					this.SendPropertyChanged("SideDishTwo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_order_appetizer", Storage="_Cs_appetizer", ThisKey="AppetizerId", OtherKey="AppetizerId", IsForeignKey=true)]
		public Cs_appetizer Cs_appetizer
		{
			get
			{
				return this._Cs_appetizer.Entity;
			}
			set
			{
				Cs_appetizer previousValue = this._Cs_appetizer.Entity;
				if (((previousValue != value) 
							|| (this._Cs_appetizer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cs_appetizer.Entity = null;
						previousValue.Cs_order.Remove(this);
					}
					this._Cs_appetizer.Entity = value;
					if ((value != null))
					{
						value.Cs_order.Add(this);
						this._AppetizerId = value.AppetizerId;
					}
					else
					{
						this._AppetizerId = default(int);
					}
					this.SendPropertyChanged("Cs_appetizer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cs_sideDish")]
	public partial class Cs_sideDish : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SideDishId;
		
		private string _DishName;
		
		private double _DishPrice;
		
		private EntitySet<Cs_order> _Cs_order;
		
		private EntitySet<Cs_order> _SideDish;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSideDishIdChanging(int value);
    partial void OnSideDishIdChanged();
    partial void OnDishNameChanging(string value);
    partial void OnDishNameChanged();
    partial void OnDishPriceChanging(double value);
    partial void OnDishPriceChanged();
    #endregion
		
		public Cs_sideDish()
		{
			this._Cs_order = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_Cs_order), new Action<Cs_order>(this.detach_Cs_order));
			this._SideDish = new EntitySet<Cs_order>(new Action<Cs_order>(this.attach_SideDish), new Action<Cs_order>(this.detach_SideDish));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sideDishId", Storage="_SideDishId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SideDishId
		{
			get
			{
				return this._SideDishId;
			}
			set
			{
				if ((this._SideDishId != value))
				{
					this.OnSideDishIdChanging(value);
					this.SendPropertyChanging();
					this._SideDishId = value;
					this.SendPropertyChanged("SideDishId");
					this.OnSideDishIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishName", Storage="_DishName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DishName
		{
			get
			{
				return this._DishName;
			}
			set
			{
				if ((this._DishName != value))
				{
					this.OnDishNameChanging(value);
					this.SendPropertyChanging();
					this._DishName = value;
					this.SendPropertyChanged("DishName");
					this.OnDishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dishPrice", Storage="_DishPrice", DbType="Float NOT NULL")]
		public double DishPrice
		{
			get
			{
				return this._DishPrice;
			}
			set
			{
				if ((this._DishPrice != value))
				{
					this.OnDishPriceChanging(value);
					this.SendPropertyChanging();
					this._DishPrice = value;
					this.SendPropertyChanged("DishPrice");
					this.OnDishPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_sideDishOne", Storage="_Cs_order", ThisKey="SideDishId", OtherKey="SideDishOneId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> Cs_order
		{
			get
			{
				return this._Cs_order;
			}
			set
			{
				this._Cs_order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cs_order_cs_sideDishTwo", Storage="_SideDish", ThisKey="SideDishId", OtherKey="SideDishTwoId", DeleteRule="NO ACTION")]
		public EntitySet<Cs_order> SideDish
		{
			get
			{
				return this._SideDish;
			}
			set
			{
				this._SideDish.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_sideDish = this;
		}
		
		private void detach_Cs_order(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.Cs_sideDish = null;
		}
		
		private void attach_SideDish(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.SideDishTwo = this;
		}
		
		private void detach_SideDish(Cs_order entity)
		{
			this.SendPropertyChanging();
			entity.SideDishTwo = null;
		}
	}
}
#pragma warning restore 1591
